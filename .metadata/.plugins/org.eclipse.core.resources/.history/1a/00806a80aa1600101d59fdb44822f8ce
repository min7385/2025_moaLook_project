package com.future.my.member.web;

import java.io.UnsupportedEncodingException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.future.my.member.service.MemberService;
import com.future.my.member.vo.MemberVO;

@Controller
public class MemberController {
	
	@Autowired
	MemberService memberService;
	
	@RequestMapping("/registView")
	public String registView() {
		return "member/registView";
	}
	
	@RequestMapping("/registDo")
	public String registDo(HttpServletRequest request) {
		
		try {
			request.setCharacterEncoding("UTF-8");
		}catch(UnsupportedEncodingException e1) {
			e1.printStackTrace();
		}
		
		String id = request.getParameter("id");
		String pw = request.getParameter("pw");
		String name = request.getParameter("name");
		
		System.out.println("id = " + id);
		System.out.println("pw = " + pw);
		System.out.println("name = " + name);
		
		MemberVO member = new MemberVO(id, pw, name);
		try {
			memberService.registMember(member);
		} catch(Exception e) {
			e.printStackTrace();
			return "errorPage";
		}
		
		return "redirect:/";
	}
	
	@RequestMapping("/loginDo")
	public String loginDo(MemberVO member, HttpSession session, boolean remember, String fromUrl, HttpServletResponse response)
			throws Exception{
		
		System.out.println("id = " + member.getMemId());
		System.out.println("pw = " + member.getMemPw());
		
		MemberVO login = memberService.loginMember(member);
		
		session.setAttribute("login", login);
		
		if(remember) {
			// 쿠키 생성
			Cookie cookie = new Cookie("rememberId", member.getMemId());
			// 응답하는 객체에 붙여준다.
			response.addCookie(cookie);
		}else {
			// 쿠키 삭제
			Cookie cookie = new Cookie("rememberId", "");
			cookie.setMaxAge(0);
			// 유효기간 0짜리인 쿠키를 응답하는 객체에 붙여준다.
			response.addCookie(cookie);
		}
		
		System.out.println("controller: " + login);
		return "redirect:/";
	}
	
	@RequestMapping("/logoutDo")
	public String logoutDo(HttpSession session) {	
		// session 종료
		session.invalidate();	
		return "redirect:/";
	}
}
